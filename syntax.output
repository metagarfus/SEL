Terminals which are not used

   EXTERNAL
   DOLLAR
   SEMICOLON
   QUOTES


Grammar

    0 $accept: Stmt $end

    1 Stmt: Definitions

    2 Definitions: Definition Definitions
    3            | Definition

    4 Definition: Function
    5           | INCLUDE STRING_EXPR
    6           | TYPEDEF TAG EQUALS ArrowType
    7           | TYPEDEF TAG
    8           | STATIC VarDeclaration EQUALS Expr
    9           | DATATYPE ArrowType AS TAG OPEN VarDeclarations CLOSE Expr WITH OPEN FunctionList CLOSE

   10 Function: FUNCTION TAG OPEN VarDeclarations CLOSE COLON ArrowType EQUALS Expr
   11         | PROTOTYPE TAG OPEN VarDeclarations CLOSE COLON ArrowType

   12 FunctionList: Function FunctionList
   13             | Function

   14 ArrowType: PointerType ARROW ArrowType
   15          | OPEN ArgTypeList CLOSE ARROW ArrowType
   16          | OPEN CLOSE ARROW ArrowType
   17          | PointerType

   18 PointerType: TIMES ArrayType
   19            | TIMES SimpleType OPEN_S_BRACKET CLOSE_S_BRACKET
   20            | BOX SimpleType OPEN_S_BRACKET CLOSE_S_BRACKET
   21            | BOX ArrayType
   22            | ArrayType

   23 ArrayType: SimpleType OPEN_S_BRACKET INTEGER_EXPR CLOSE_S_BRACKET
   24          | SimpleType

   25 SimpleType: BYTE
   26           | INT
   27           | LONG
   28           | DOUBLE
   29           | BOOLEAN
   30           | OPEN_BRACKET VarDeclarationList CLOSE_BRACKET
   31           | UNION OPEN_BRACKET UnionDeclarationList CLOSE_BRACKET
   32           | TIMES QUESTION_MARK
   33           | QUESTION_MARK QUESTION_MARK
   34           | DYNAMIC
   35           | CHARS
   36           | TAG
   37           | OPEN ArrowType CLOSE

   38 ArgTypeList: PointerType COMMA ArgTypeList
   39            | PointerType COMMA PointerType

   40 VarDeclarations: VarDeclarationList
   41                | /* empty */

   42 VarDeclarationList: VarDeclaration COMMA VarDeclarationList
   43                   | VarDeclaration

   44 VarDeclaration: TAG COLON ArrowType
   45               | TAG

   46 UnionDeclarationList: UnionDeclaration PIPE UnionDeclarationList
   47                     | UnionDeclaration

   48 UnionDeclaration: TAG ArrowType
   49                 | TAG

   50 Expr: ExpOp ASSIGN Expr
   51     | ExpOp COLON ArrowType
   52     | ExpOp IS ArrowType
   53     | LET VarDeclaration EQUALS Expr IN Expr
   54     | STATIC VarDeclaration EQUALS Expr IN Expr
   55     | IF Expr THEN Expr ELSE Expr
   56     | CASE Expr OF OPEN CaseList CLOSE
   57     | FOR VarDeclaration EQUALS Expr COMMA Expr COMMA Expr IN Expr
   58     | FOREACH VarDeclaration FROM Expr IN Expr
   59     | WHILE Expr IN Expr
   60     | ExpOp

   61 ExpOp: ExpOp AND ExpOp
   62      | ExpOp OR ExpOp
   63      | ExpOp LTE ExpOp
   64      | ExpOp GTE ExpOp
   65      | ExpOp LT ExpOp
   66      | ExpOp GT ExpOp
   67      | ExpOp EQ ExpOp
   68      | ExpOp PLUS ExpOp
   69      | ExpOp MINUS ExpOp
   70      | ExpOp TIMES ExpOp
   71      | ExpOp DIVIDE ExpOp
   72      | Access

   73 Access: Value AccessPathList
   74       | Value

   75 AccessPathList: AccessPath AccessPathList
   76               | AccessPath

   77 AccessPath: DOT TAG
   78           | ARROW TAG
   79           | DOUBLE_ARROW TAG
   80           | OPEN_S_BRACKET Expr CLOSE_S_BRACKET
   81           | ARROW OPEN_S_BRACKET Expr CLOSE_S_BRACKET
   82           | DOUBLE_ARROW OPEN_S_BRACKET Expr CLOSE_S_BRACKET

   83 Value: NOT Value
   84      | PLUS Value
   85      | MINUS Value
   86      | TIMES Value
   87      | AMPERSAND Value
   88      | CARDINAL Value
   89      | BOX Value
   90      | UNBOX Value
   91      | DOUBLE_EXPR
   92      | INTEGER_EXPR
   93      | STRING_EXPR
   94      | BOX WITH Expr OF OPEN TAG IN Expr CLOSE
   95      | ARRAY WITH Expr OF OPEN TAG IN Expr CLOSE
   96      | OPEN_S_BRACKET INTEGER_EXPR OF TAG IN Expr CLOSE_S_BRACKET
   97      | NEW ArrowType OPEN Arguments CLOSE
   98      | OPEN_BRACKET VarDeclarationList APPLY Expr CLOSE_BRACKET
   99      | OPEN_S_BRACKET Arguments CLOSE_S_BRACKET
  100      | TAG OPEN_BRACKET MapsList CLOSE_BRACKET
  101      | TAG DOUBLE_COLON TAG OPEN_BRACKET Expr CLOSE_BRACKET
  102      | TAG DOUBLE_COLON TAG OPEN_BRACKET OPEN_BRACKET MapsList CLOSE_BRACKET CLOSE_BRACKET
  103      | TAG DOUBLE_COLON TAG
  104      | TAG_OR_EMPTY OPEN Arguments CLOSE
  105      | TAG

  106 TAG_OR_EMPTY: TAG
  107             | /* empty */

  108 Arguments: ArgList
  109          | /* empty */

  110 ArgList: Expr COMMA ArgList
  111        | Expr

  112 Mapping: VarDeclaration EQUALS Expr

  113 MapsList: Mapping COMMA MapsList
  114         | Mapping

  115 Case: TAG VarDeclaration IN Expr
  116     | TAG IN Expr
  117     | OTHERWISE IN Expr

  118 CaseList: Case PIPE CaseList
  119         | Case

  120 DOUBLE_EXPR: DOUBLE_VALUE

  121 INTEGER_EXPR: INTEGER

  122 STRING_EXPR: STRING


Terminals, with rules where they appear

$end (0) 0
error (256)
DOUBLE_VALUE (258) 120
INTEGER (259) 121
TAG (260) 6 7 9 10 11 36 44 45 48 49 77 78 79 94 95 96 100 101 102
    103 105 106 115 116
STRING (261) 122
PLUS (262) 68 84
MINUS (263) 69 85
TIMES (264) 18 19 32 70 86
DIVIDE (265) 71
OPEN (266) 9 10 11 15 16 37 56 94 95 97 104
CLOSE (267) 9 10 11 15 16 37 56 94 95 97 104
COLON (268) 10 11 44 51
ASSIGN (269) 50
EQUALS (270) 6 8 10 53 54 57 112
OPEN_S_BRACKET (271) 19 20 23 80 81 82 96 99
CLOSE_S_BRACKET (272) 19 20 23 80 81 82 96 99
OPEN_BRACKET (273) 30 31 98 100 101 102
CLOSE_BRACKET (274) 30 31 98 100 101 102
INCLUDE (275) 5
DATATYPE (276) 9
WITH (277) 9 94 95
FUNCTION (278) 10
PROTOTYPE (279) 11
EXTERNAL (280)
ARROW (281) 14 15 16 78 81
DOUBLE_ARROW (282) 79 82
BYTE (283) 25
INT (284) 26
LONG (285) 27
DOUBLE (286) 28
CHARS (287) 35
BOOLEAN (288) 29
ARRAY (289) 95
BOX (290) 20 21 89 94
UNBOX (291) 90
OF (292) 56 94 95 96
DYNAMIC (293) 34
APPLY (294) 98
IN (295) 53 54 57 58 59 94 95 96 115 116 117
LET (296) 53
FOR (297) 57
FOREACH (298) 58
FROM (299) 58
WHILE (300) 59
IF (301) 55
THEN (302) 55
ELSE (303) 55
CARDINAL (304) 88
DOLLAR (305)
NEW (306) 97
TYPEDEF (307) 6 7
COMMA (308) 38 39 42 57 110 113
AMPERSAND (309) 87
AND (310) 61
OR (311) 62
LTE (312) 63
GTE (313) 64
LT (314) 65
GT (315) 66
EQ (316) 67
NOT (317) 83
DOT (318) 77
IS (319) 52
STATIC (320) 8 54
AS (321) 9
QUESTION_MARK (322) 32 33
SEMICOLON (323)
QUOTES (324)
UNION (325) 31
CASE (326) 56
PIPE (327) 46 118
DOUBLE_COLON (328) 101 102 103
OTHERWISE (329) 117


Nonterminals, with rules where they appear

$accept (75)
    on left: 0
Stmt (76)
    on left: 1, on right: 0
Definitions (77)
    on left: 2 3, on right: 1 2
Definition (78)
    on left: 4 5 6 7 8 9, on right: 2 3
Function (79)
    on left: 10 11, on right: 4 12 13
FunctionList (80)
    on left: 12 13, on right: 9 12
ArrowType (81)
    on left: 14 15 16 17, on right: 6 9 10 11 14 15 16 37 44 48 51
    52 97
PointerType (82)
    on left: 18 19 20 21 22, on right: 14 17 38 39
ArrayType (83)
    on left: 23 24, on right: 18 21 22
SimpleType (84)
    on left: 25 26 27 28 29 30 31 32 33 34 35 36 37,
    on right: 19 20 23 24
ArgTypeList (85)
    on left: 38 39, on right: 15 38
VarDeclarations (86)
    on left: 40 41, on right: 9 10 11
VarDeclarationList (87)
    on left: 42 43, on right: 30 40 42 98
VarDeclaration (88)
    on left: 44 45, on right: 8 42 43 53 54 57 58 112 115
UnionDeclarationList (89)
    on left: 46 47, on right: 31 46
UnionDeclaration (90)
    on left: 48 49, on right: 46 47
Expr (91)
    on left: 50 51 52 53 54 55 56 57 58 59 60, on right: 8 9 10 50
    53 54 55 56 57 58 59 80 81 82 94 95 96 98 101 110 111 112 115 116
    117
ExpOp (92)
    on left: 61 62 63 64 65 66 67 68 69 70 71 72, on right: 50 51 52
    60 61 62 63 64 65 66 67 68 69 70 71
Access (93)
    on left: 73 74, on right: 72
AccessPathList (94)
    on left: 75 76, on right: 73 75
AccessPath (95)
    on left: 77 78 79 80 81 82, on right: 75 76
Value (96)
    on left: 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100
    101 102 103 104 105, on right: 73 74 83 84 85 86 87 88 89 90
TAG_OR_EMPTY (97)
    on left: 106 107, on right: 104
Arguments (98)
    on left: 108 109, on right: 97 99 104
ArgList (99)
    on left: 110 111, on right: 108 110
Mapping (100)
    on left: 112, on right: 113 114
MapsList (101)
    on left: 113 114, on right: 100 102 113
Case (102)
    on left: 115 116 117, on right: 118 119
CaseList (103)
    on left: 118 119, on right: 56 118
DOUBLE_EXPR (104)
    on left: 120, on right: 91
INTEGER_EXPR (105)
    on left: 121, on right: 23 92 96
STRING_EXPR (106)
    on left: 122, on right: 5 93


state 0

    0 $accept: . Stmt $end

    INCLUDE    shift, and go to state 1
    DATATYPE   shift, and go to state 2
    FUNCTION   shift, and go to state 3
    PROTOTYPE  shift, and go to state 4
    TYPEDEF    shift, and go to state 5
    STATIC     shift, and go to state 6

    Stmt         go to state 7
    Definitions  go to state 8
    Definition   go to state 9
    Function     go to state 10


state 1

    5 Definition: INCLUDE . STRING_EXPR

    STRING  shift, and go to state 11

    STRING_EXPR  go to state 12


state 2

    9 Definition: DATATYPE . ArrowType AS TAG OPEN VarDeclarations CLOSE Expr WITH OPEN FunctionList CLOSE

    TAG            shift, and go to state 13
    TIMES          shift, and go to state 14
    OPEN           shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    BYTE           shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    DOUBLE         shift, and go to state 20
    CHARS          shift, and go to state 21
    BOOLEAN        shift, and go to state 22
    BOX            shift, and go to state 23
    DYNAMIC        shift, and go to state 24
    QUESTION_MARK  shift, and go to state 25
    UNION          shift, and go to state 26

    ArrowType    go to state 27
    PointerType  go to state 28
    ArrayType    go to state 29
    SimpleType   go to state 30


state 3

   10 Function: FUNCTION . TAG OPEN VarDeclarations CLOSE COLON ArrowType EQUALS Expr

    TAG  shift, and go to state 31


state 4

   11 Function: PROTOTYPE . TAG OPEN VarDeclarations CLOSE COLON ArrowType

    TAG  shift, and go to state 32


state 5

    6 Definition: TYPEDEF . TAG EQUALS ArrowType
    7           | TYPEDEF . TAG

    TAG  shift, and go to state 33


state 6

    8 Definition: STATIC . VarDeclaration EQUALS Expr

    TAG  shift, and go to state 34

    VarDeclaration  go to state 35


state 7

    0 $accept: Stmt . $end

    $end  shift, and go to state 36


state 8

    1 Stmt: Definitions .

    $default  reduce using rule 1 (Stmt)


state 9

    2 Definitions: Definition . Definitions
    3            | Definition .

    INCLUDE    shift, and go to state 1
    DATATYPE   shift, and go to state 2
    FUNCTION   shift, and go to state 3
    PROTOTYPE  shift, and go to state 4
    TYPEDEF    shift, and go to state 5
    STATIC     shift, and go to state 6

    $default  reduce using rule 3 (Definitions)

    Definitions  go to state 37
    Definition   go to state 9
    Function     go to state 10


state 10

    4 Definition: Function .

    $default  reduce using rule 4 (Definition)


state 11

  122 STRING_EXPR: STRING .

    $default  reduce using rule 122 (STRING_EXPR)


state 12

    5 Definition: INCLUDE STRING_EXPR .

    $default  reduce using rule 5 (Definition)


state 13

   36 SimpleType: TAG .

    $default  reduce using rule 36 (SimpleType)


state 14

   18 PointerType: TIMES . ArrayType
   19            | TIMES . SimpleType OPEN_S_BRACKET CLOSE_S_BRACKET
   32 SimpleType: TIMES . QUESTION_MARK

    TAG            shift, and go to state 13
    TIMES          shift, and go to state 38
    OPEN           shift, and go to state 39
    OPEN_BRACKET   shift, and go to state 16
    BYTE           shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    DOUBLE         shift, and go to state 20
    CHARS          shift, and go to state 21
    BOOLEAN        shift, and go to state 22
    DYNAMIC        shift, and go to state 24
    QUESTION_MARK  shift, and go to state 40
    UNION          shift, and go to state 26

    ArrayType   go to state 41
    SimpleType  go to state 42


state 15

   15 ArrowType: OPEN . ArgTypeList CLOSE ARROW ArrowType
   16          | OPEN . CLOSE ARROW ArrowType
   37 SimpleType: OPEN . ArrowType CLOSE

    TAG            shift, and go to state 13
    TIMES          shift, and go to state 14
    OPEN           shift, and go to state 15
    CLOSE          shift, and go to state 43
    OPEN_BRACKET   shift, and go to state 16
    BYTE           shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    DOUBLE         shift, and go to state 20
    CHARS          shift, and go to state 21
    BOOLEAN        shift, and go to state 22
    BOX            shift, and go to state 23
    DYNAMIC        shift, and go to state 24
    QUESTION_MARK  shift, and go to state 25
    UNION          shift, and go to state 26

    ArrowType    go to state 44
    PointerType  go to state 45
    ArrayType    go to state 29
    SimpleType   go to state 30
    ArgTypeList  go to state 46


state 16

   30 SimpleType: OPEN_BRACKET . VarDeclarationList CLOSE_BRACKET

    TAG  shift, and go to state 34

    VarDeclarationList  go to state 47
    VarDeclaration      go to state 48


state 17

   25 SimpleType: BYTE .

    $default  reduce using rule 25 (SimpleType)


state 18

   26 SimpleType: INT .

    $default  reduce using rule 26 (SimpleType)


state 19

   27 SimpleType: LONG .

    $default  reduce using rule 27 (SimpleType)


state 20

   28 SimpleType: DOUBLE .

    $default  reduce using rule 28 (SimpleType)


state 21

   35 SimpleType: CHARS .

    $default  reduce using rule 35 (SimpleType)


state 22

   29 SimpleType: BOOLEAN .

    $default  reduce using rule 29 (SimpleType)


state 23

   20 PointerType: BOX . SimpleType OPEN_S_BRACKET CLOSE_S_BRACKET
   21            | BOX . ArrayType

    TAG            shift, and go to state 13
    TIMES          shift, and go to state 38
    OPEN           shift, and go to state 39
    OPEN_BRACKET   shift, and go to state 16
    BYTE           shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    DOUBLE         shift, and go to state 20
    CHARS          shift, and go to state 21
    BOOLEAN        shift, and go to state 22
    DYNAMIC        shift, and go to state 24
    QUESTION_MARK  shift, and go to state 25
    UNION          shift, and go to state 26

    ArrayType   go to state 49
    SimpleType  go to state 50


state 24

   34 SimpleType: DYNAMIC .

    $default  reduce using rule 34 (SimpleType)


state 25

   33 SimpleType: QUESTION_MARK . QUESTION_MARK

    QUESTION_MARK  shift, and go to state 51


state 26

   31 SimpleType: UNION . OPEN_BRACKET UnionDeclarationList CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 52


state 27

    9 Definition: DATATYPE ArrowType . AS TAG OPEN VarDeclarations CLOSE Expr WITH OPEN FunctionList CLOSE

    AS  shift, and go to state 53


state 28

   14 ArrowType: PointerType . ARROW ArrowType
   17          | PointerType .

    ARROW  shift, and go to state 54

    $default  reduce using rule 17 (ArrowType)


state 29

   22 PointerType: ArrayType .

    $default  reduce using rule 22 (PointerType)


state 30

   23 ArrayType: SimpleType . OPEN_S_BRACKET INTEGER_EXPR CLOSE_S_BRACKET
   24          | SimpleType .

    OPEN_S_BRACKET  shift, and go to state 55

    $default  reduce using rule 24 (ArrayType)


state 31

   10 Function: FUNCTION TAG . OPEN VarDeclarations CLOSE COLON ArrowType EQUALS Expr

    OPEN  shift, and go to state 56


state 32

   11 Function: PROTOTYPE TAG . OPEN VarDeclarations CLOSE COLON ArrowType

    OPEN  shift, and go to state 57


state 33

    6 Definition: TYPEDEF TAG . EQUALS ArrowType
    7           | TYPEDEF TAG .

    EQUALS  shift, and go to state 58

    $default  reduce using rule 7 (Definition)


state 34

   44 VarDeclaration: TAG . COLON ArrowType
   45               | TAG .

    COLON  shift, and go to state 59

    $default  reduce using rule 45 (VarDeclaration)


state 35

    8 Definition: STATIC VarDeclaration . EQUALS Expr

    EQUALS  shift, and go to state 60


state 36

    0 $accept: Stmt $end .

    $default  accept


state 37

    2 Definitions: Definition Definitions .

    $default  reduce using rule 2 (Definitions)


state 38

   32 SimpleType: TIMES . QUESTION_MARK

    QUESTION_MARK  shift, and go to state 61


state 39

   37 SimpleType: OPEN . ArrowType CLOSE

    TAG            shift, and go to state 13
    TIMES          shift, and go to state 14
    OPEN           shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    BYTE           shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    DOUBLE         shift, and go to state 20
    CHARS          shift, and go to state 21
    BOOLEAN        shift, and go to state 22
    BOX            shift, and go to state 23
    DYNAMIC        shift, and go to state 24
    QUESTION_MARK  shift, and go to state 25
    UNION          shift, and go to state 26

    ArrowType    go to state 44
    PointerType  go to state 28
    ArrayType    go to state 29
    SimpleType   go to state 30


state 40

   32 SimpleType: TIMES QUESTION_MARK .
   33           | QUESTION_MARK . QUESTION_MARK

    QUESTION_MARK  shift, and go to state 51

    $default  reduce using rule 32 (SimpleType)


state 41

   18 PointerType: TIMES ArrayType .

    $default  reduce using rule 18 (PointerType)


state 42

   19 PointerType: TIMES SimpleType . OPEN_S_BRACKET CLOSE_S_BRACKET
   23 ArrayType: SimpleType . OPEN_S_BRACKET INTEGER_EXPR CLOSE_S_BRACKET
   24          | SimpleType .

    OPEN_S_BRACKET  shift, and go to state 62

    $default  reduce using rule 24 (ArrayType)


state 43

   16 ArrowType: OPEN CLOSE . ARROW ArrowType

    ARROW  shift, and go to state 63


state 44

   37 SimpleType: OPEN ArrowType . CLOSE

    CLOSE  shift, and go to state 64


state 45

   14 ArrowType: PointerType . ARROW ArrowType
   17          | PointerType .
   38 ArgTypeList: PointerType . COMMA ArgTypeList
   39            | PointerType . COMMA PointerType

    ARROW  shift, and go to state 54
    COMMA  shift, and go to state 65

    $default  reduce using rule 17 (ArrowType)


state 46

   15 ArrowType: OPEN ArgTypeList . CLOSE ARROW ArrowType

    CLOSE  shift, and go to state 66


state 47

   30 SimpleType: OPEN_BRACKET VarDeclarationList . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 67


state 48

   42 VarDeclarationList: VarDeclaration . COMMA VarDeclarationList
   43                   | VarDeclaration .

    COMMA  shift, and go to state 68

    $default  reduce using rule 43 (VarDeclarationList)


state 49

   21 PointerType: BOX ArrayType .

    $default  reduce using rule 21 (PointerType)


state 50

   20 PointerType: BOX SimpleType . OPEN_S_BRACKET CLOSE_S_BRACKET
   23 ArrayType: SimpleType . OPEN_S_BRACKET INTEGER_EXPR CLOSE_S_BRACKET
   24          | SimpleType .

    OPEN_S_BRACKET  shift, and go to state 69

    $default  reduce using rule 24 (ArrayType)


state 51

   33 SimpleType: QUESTION_MARK QUESTION_MARK .

    $default  reduce using rule 33 (SimpleType)


state 52

   31 SimpleType: UNION OPEN_BRACKET . UnionDeclarationList CLOSE_BRACKET

    TAG  shift, and go to state 70

    UnionDeclarationList  go to state 71
    UnionDeclaration      go to state 72


state 53

    9 Definition: DATATYPE ArrowType AS . TAG OPEN VarDeclarations CLOSE Expr WITH OPEN FunctionList CLOSE

    TAG  shift, and go to state 73


state 54

   14 ArrowType: PointerType ARROW . ArrowType

    TAG            shift, and go to state 13
    TIMES          shift, and go to state 14
    OPEN           shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    BYTE           shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    DOUBLE         shift, and go to state 20
    CHARS          shift, and go to state 21
    BOOLEAN        shift, and go to state 22
    BOX            shift, and go to state 23
    DYNAMIC        shift, and go to state 24
    QUESTION_MARK  shift, and go to state 25
    UNION          shift, and go to state 26

    ArrowType    go to state 74
    PointerType  go to state 28
    ArrayType    go to state 29
    SimpleType   go to state 30


state 55

   23 ArrayType: SimpleType OPEN_S_BRACKET . INTEGER_EXPR CLOSE_S_BRACKET

    INTEGER  shift, and go to state 75

    INTEGER_EXPR  go to state 76


state 56

   10 Function: FUNCTION TAG OPEN . VarDeclarations CLOSE COLON ArrowType EQUALS Expr

    TAG  shift, and go to state 34

    $default  reduce using rule 41 (VarDeclarations)

    VarDeclarations     go to state 77
    VarDeclarationList  go to state 78
    VarDeclaration      go to state 48


state 57

   11 Function: PROTOTYPE TAG OPEN . VarDeclarations CLOSE COLON ArrowType

    TAG  shift, and go to state 34

    $default  reduce using rule 41 (VarDeclarations)

    VarDeclarations     go to state 79
    VarDeclarationList  go to state 78
    VarDeclaration      go to state 48


state 58

    6 Definition: TYPEDEF TAG EQUALS . ArrowType

    TAG            shift, and go to state 13
    TIMES          shift, and go to state 14
    OPEN           shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    BYTE           shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    DOUBLE         shift, and go to state 20
    CHARS          shift, and go to state 21
    BOOLEAN        shift, and go to state 22
    BOX            shift, and go to state 23
    DYNAMIC        shift, and go to state 24
    QUESTION_MARK  shift, and go to state 25
    UNION          shift, and go to state 26

    ArrowType    go to state 80
    PointerType  go to state 28
    ArrayType    go to state 29
    SimpleType   go to state 30


state 59

   44 VarDeclaration: TAG COLON . ArrowType

    TAG            shift, and go to state 13
    TIMES          shift, and go to state 14
    OPEN           shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    BYTE           shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    DOUBLE         shift, and go to state 20
    CHARS          shift, and go to state 21
    BOOLEAN        shift, and go to state 22
    BOX            shift, and go to state 23
    DYNAMIC        shift, and go to state 24
    QUESTION_MARK  shift, and go to state 25
    UNION          shift, and go to state 26

    ArrowType    go to state 81
    PointerType  go to state 28
    ArrayType    go to state 29
    SimpleType   go to state 30


state 60

    8 Definition: STATIC VarDeclaration EQUALS . Expr

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 103
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 61

   32 SimpleType: TIMES QUESTION_MARK .

    $default  reduce using rule 32 (SimpleType)


state 62

   19 PointerType: TIMES SimpleType OPEN_S_BRACKET . CLOSE_S_BRACKET
   23 ArrayType: SimpleType OPEN_S_BRACKET . INTEGER_EXPR CLOSE_S_BRACKET

    INTEGER          shift, and go to state 75
    CLOSE_S_BRACKET  shift, and go to state 111

    INTEGER_EXPR  go to state 76


state 63

   16 ArrowType: OPEN CLOSE ARROW . ArrowType

    TAG            shift, and go to state 13
    TIMES          shift, and go to state 14
    OPEN           shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    BYTE           shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    DOUBLE         shift, and go to state 20
    CHARS          shift, and go to state 21
    BOOLEAN        shift, and go to state 22
    BOX            shift, and go to state 23
    DYNAMIC        shift, and go to state 24
    QUESTION_MARK  shift, and go to state 25
    UNION          shift, and go to state 26

    ArrowType    go to state 112
    PointerType  go to state 28
    ArrayType    go to state 29
    SimpleType   go to state 30


state 64

   37 SimpleType: OPEN ArrowType CLOSE .

    $default  reduce using rule 37 (SimpleType)


state 65

   38 ArgTypeList: PointerType COMMA . ArgTypeList
   39            | PointerType COMMA . PointerType

    TAG            shift, and go to state 13
    TIMES          shift, and go to state 14
    OPEN           shift, and go to state 39
    OPEN_BRACKET   shift, and go to state 16
    BYTE           shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    DOUBLE         shift, and go to state 20
    CHARS          shift, and go to state 21
    BOOLEAN        shift, and go to state 22
    BOX            shift, and go to state 23
    DYNAMIC        shift, and go to state 24
    QUESTION_MARK  shift, and go to state 25
    UNION          shift, and go to state 26

    PointerType  go to state 113
    ArrayType    go to state 29
    SimpleType   go to state 30
    ArgTypeList  go to state 114


state 66

   15 ArrowType: OPEN ArgTypeList CLOSE . ARROW ArrowType

    ARROW  shift, and go to state 115


state 67

   30 SimpleType: OPEN_BRACKET VarDeclarationList CLOSE_BRACKET .

    $default  reduce using rule 30 (SimpleType)


state 68

   42 VarDeclarationList: VarDeclaration COMMA . VarDeclarationList

    TAG  shift, and go to state 34

    VarDeclarationList  go to state 116
    VarDeclaration      go to state 48


state 69

   20 PointerType: BOX SimpleType OPEN_S_BRACKET . CLOSE_S_BRACKET
   23 ArrayType: SimpleType OPEN_S_BRACKET . INTEGER_EXPR CLOSE_S_BRACKET

    INTEGER          shift, and go to state 75
    CLOSE_S_BRACKET  shift, and go to state 117

    INTEGER_EXPR  go to state 76


state 70

   48 UnionDeclaration: TAG . ArrowType
   49                 | TAG .

    TAG            shift, and go to state 13
    TIMES          shift, and go to state 14
    OPEN           shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    BYTE           shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    DOUBLE         shift, and go to state 20
    CHARS          shift, and go to state 21
    BOOLEAN        shift, and go to state 22
    BOX            shift, and go to state 23
    DYNAMIC        shift, and go to state 24
    QUESTION_MARK  shift, and go to state 25
    UNION          shift, and go to state 26

    $default  reduce using rule 49 (UnionDeclaration)

    ArrowType    go to state 118
    PointerType  go to state 28
    ArrayType    go to state 29
    SimpleType   go to state 30


state 71

   31 SimpleType: UNION OPEN_BRACKET UnionDeclarationList . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 119


state 72

   46 UnionDeclarationList: UnionDeclaration . PIPE UnionDeclarationList
   47                     | UnionDeclaration .

    PIPE  shift, and go to state 120

    $default  reduce using rule 47 (UnionDeclarationList)


state 73

    9 Definition: DATATYPE ArrowType AS TAG . OPEN VarDeclarations CLOSE Expr WITH OPEN FunctionList CLOSE

    OPEN  shift, and go to state 121


state 74

   14 ArrowType: PointerType ARROW ArrowType .

    $default  reduce using rule 14 (ArrowType)


state 75

  121 INTEGER_EXPR: INTEGER .

    $default  reduce using rule 121 (INTEGER_EXPR)


state 76

   23 ArrayType: SimpleType OPEN_S_BRACKET INTEGER_EXPR . CLOSE_S_BRACKET

    CLOSE_S_BRACKET  shift, and go to state 122


state 77

   10 Function: FUNCTION TAG OPEN VarDeclarations . CLOSE COLON ArrowType EQUALS Expr

    CLOSE  shift, and go to state 123


state 78

   40 VarDeclarations: VarDeclarationList .

    $default  reduce using rule 40 (VarDeclarations)


state 79

   11 Function: PROTOTYPE TAG OPEN VarDeclarations . CLOSE COLON ArrowType

    CLOSE  shift, and go to state 124


state 80

    6 Definition: TYPEDEF TAG EQUALS ArrowType .

    $default  reduce using rule 6 (Definition)


state 81

   44 VarDeclaration: TAG COLON ArrowType .

    $default  reduce using rule 44 (VarDeclaration)


state 82

  120 DOUBLE_EXPR: DOUBLE_VALUE .

    $default  reduce using rule 120 (DOUBLE_EXPR)


state 83

  100 Value: TAG . OPEN_BRACKET MapsList CLOSE_BRACKET
  101      | TAG . DOUBLE_COLON TAG OPEN_BRACKET Expr CLOSE_BRACKET
  102      | TAG . DOUBLE_COLON TAG OPEN_BRACKET OPEN_BRACKET MapsList CLOSE_BRACKET CLOSE_BRACKET
  103      | TAG . DOUBLE_COLON TAG
  105      | TAG .
  106 TAG_OR_EMPTY: TAG .

    OPEN_BRACKET  shift, and go to state 125
    DOUBLE_COLON  shift, and go to state 126

    OPEN      reduce using rule 106 (TAG_OR_EMPTY)
    $default  reduce using rule 105 (Value)


state 84

   84 Value: PLUS . Value

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Value         go to state 127
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 85

   85 Value: MINUS . Value

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Value         go to state 128
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 86

   86 Value: TIMES . Value

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Value         go to state 129
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 87

   96 Value: OPEN_S_BRACKET . INTEGER_EXPR OF TAG IN Expr CLOSE_S_BRACKET
   99      | OPEN_S_BRACKET . Arguments CLOSE_S_BRACKET

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    CLOSE_S_BRACKET  reduce using rule 109 (Arguments)
    $default         reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 130
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    Arguments     go to state 131
    ArgList       go to state 132
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 133
    STRING_EXPR   go to state 110


state 88

   98 Value: OPEN_BRACKET . VarDeclarationList APPLY Expr CLOSE_BRACKET

    TAG  shift, and go to state 34

    VarDeclarationList  go to state 134
    VarDeclaration      go to state 48


state 89

   95 Value: ARRAY . WITH Expr OF OPEN TAG IN Expr CLOSE

    WITH  shift, and go to state 135


state 90

   89 Value: BOX . Value
   94      | BOX . WITH Expr OF OPEN TAG IN Expr CLOSE

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    WITH            shift, and go to state 136
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Value         go to state 137
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 91

   90 Value: UNBOX . Value

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Value         go to state 138
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 92

   53 Expr: LET . VarDeclaration EQUALS Expr IN Expr

    TAG  shift, and go to state 34

    VarDeclaration  go to state 139


state 93

   57 Expr: FOR . VarDeclaration EQUALS Expr COMMA Expr COMMA Expr IN Expr

    TAG  shift, and go to state 34

    VarDeclaration  go to state 140


state 94

   58 Expr: FOREACH . VarDeclaration FROM Expr IN Expr

    TAG  shift, and go to state 34

    VarDeclaration  go to state 141


state 95

   59 Expr: WHILE . Expr IN Expr

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 142
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 96

   55 Expr: IF . Expr THEN Expr ELSE Expr

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 143
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 97

   88 Value: CARDINAL . Value

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Value         go to state 144
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 98

   97 Value: NEW . ArrowType OPEN Arguments CLOSE

    TAG            shift, and go to state 13
    TIMES          shift, and go to state 14
    OPEN           shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    BYTE           shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    DOUBLE         shift, and go to state 20
    CHARS          shift, and go to state 21
    BOOLEAN        shift, and go to state 22
    BOX            shift, and go to state 23
    DYNAMIC        shift, and go to state 24
    QUESTION_MARK  shift, and go to state 25
    UNION          shift, and go to state 26

    ArrowType    go to state 145
    PointerType  go to state 28
    ArrayType    go to state 29
    SimpleType   go to state 30


state 99

   87 Value: AMPERSAND . Value

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Value         go to state 146
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 100

   83 Value: NOT . Value

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Value         go to state 147
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 101

   54 Expr: STATIC . VarDeclaration EQUALS Expr IN Expr

    TAG  shift, and go to state 34

    VarDeclaration  go to state 148


state 102

   56 Expr: CASE . Expr OF OPEN CaseList CLOSE

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 149
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 103

    8 Definition: STATIC VarDeclaration EQUALS Expr .

    $default  reduce using rule 8 (Definition)


state 104

   50 Expr: ExpOp . ASSIGN Expr
   51     | ExpOp . COLON ArrowType
   52     | ExpOp . IS ArrowType
   60     | ExpOp .
   61 ExpOp: ExpOp . AND ExpOp
   62      | ExpOp . OR ExpOp
   63      | ExpOp . LTE ExpOp
   64      | ExpOp . GTE ExpOp
   65      | ExpOp . LT ExpOp
   66      | ExpOp . GT ExpOp
   67      | ExpOp . EQ ExpOp
   68      | ExpOp . PLUS ExpOp
   69      | ExpOp . MINUS ExpOp
   70      | ExpOp . TIMES ExpOp
   71      | ExpOp . DIVIDE ExpOp

    PLUS    shift, and go to state 150
    MINUS   shift, and go to state 151
    TIMES   shift, and go to state 152
    DIVIDE  shift, and go to state 153
    COLON   shift, and go to state 154
    ASSIGN  shift, and go to state 155
    AND     shift, and go to state 156
    OR      shift, and go to state 157
    LTE     shift, and go to state 158
    GTE     shift, and go to state 159
    LT      shift, and go to state 160
    GT      shift, and go to state 161
    EQ      shift, and go to state 162
    IS      shift, and go to state 163

    $default  reduce using rule 60 (Expr)


state 105

   72 ExpOp: Access .

    $default  reduce using rule 72 (ExpOp)


state 106

   73 Access: Value . AccessPathList
   74       | Value .

    OPEN_S_BRACKET  shift, and go to state 164
    ARROW           shift, and go to state 165
    DOUBLE_ARROW    shift, and go to state 166
    DOT             shift, and go to state 167

    $default  reduce using rule 74 (Access)

    AccessPathList  go to state 168
    AccessPath      go to state 169


state 107

  104 Value: TAG_OR_EMPTY . OPEN Arguments CLOSE

    OPEN  shift, and go to state 170


state 108

   91 Value: DOUBLE_EXPR .

    $default  reduce using rule 91 (Value)


state 109

   92 Value: INTEGER_EXPR .

    $default  reduce using rule 92 (Value)


state 110

   93 Value: STRING_EXPR .

    $default  reduce using rule 93 (Value)


state 111

   19 PointerType: TIMES SimpleType OPEN_S_BRACKET CLOSE_S_BRACKET .

    $default  reduce using rule 19 (PointerType)


state 112

   16 ArrowType: OPEN CLOSE ARROW ArrowType .

    $default  reduce using rule 16 (ArrowType)


state 113

   38 ArgTypeList: PointerType . COMMA ArgTypeList
   39            | PointerType . COMMA PointerType
   39            | PointerType COMMA PointerType .

    COMMA  shift, and go to state 65

    $default  reduce using rule 39 (ArgTypeList)


state 114

   38 ArgTypeList: PointerType COMMA ArgTypeList .

    $default  reduce using rule 38 (ArgTypeList)


state 115

   15 ArrowType: OPEN ArgTypeList CLOSE ARROW . ArrowType

    TAG            shift, and go to state 13
    TIMES          shift, and go to state 14
    OPEN           shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    BYTE           shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    DOUBLE         shift, and go to state 20
    CHARS          shift, and go to state 21
    BOOLEAN        shift, and go to state 22
    BOX            shift, and go to state 23
    DYNAMIC        shift, and go to state 24
    QUESTION_MARK  shift, and go to state 25
    UNION          shift, and go to state 26

    ArrowType    go to state 171
    PointerType  go to state 28
    ArrayType    go to state 29
    SimpleType   go to state 30


state 116

   42 VarDeclarationList: VarDeclaration COMMA VarDeclarationList .

    $default  reduce using rule 42 (VarDeclarationList)


state 117

   20 PointerType: BOX SimpleType OPEN_S_BRACKET CLOSE_S_BRACKET .

    $default  reduce using rule 20 (PointerType)


state 118

   48 UnionDeclaration: TAG ArrowType .

    $default  reduce using rule 48 (UnionDeclaration)


state 119

   31 SimpleType: UNION OPEN_BRACKET UnionDeclarationList CLOSE_BRACKET .

    $default  reduce using rule 31 (SimpleType)


state 120

   46 UnionDeclarationList: UnionDeclaration PIPE . UnionDeclarationList

    TAG  shift, and go to state 70

    UnionDeclarationList  go to state 172
    UnionDeclaration      go to state 72


state 121

    9 Definition: DATATYPE ArrowType AS TAG OPEN . VarDeclarations CLOSE Expr WITH OPEN FunctionList CLOSE

    TAG  shift, and go to state 34

    $default  reduce using rule 41 (VarDeclarations)

    VarDeclarations     go to state 173
    VarDeclarationList  go to state 78
    VarDeclaration      go to state 48


state 122

   23 ArrayType: SimpleType OPEN_S_BRACKET INTEGER_EXPR CLOSE_S_BRACKET .

    $default  reduce using rule 23 (ArrayType)


state 123

   10 Function: FUNCTION TAG OPEN VarDeclarations CLOSE . COLON ArrowType EQUALS Expr

    COLON  shift, and go to state 174


state 124

   11 Function: PROTOTYPE TAG OPEN VarDeclarations CLOSE . COLON ArrowType

    COLON  shift, and go to state 175


state 125

  100 Value: TAG OPEN_BRACKET . MapsList CLOSE_BRACKET

    TAG  shift, and go to state 34

    VarDeclaration  go to state 176
    Mapping         go to state 177
    MapsList        go to state 178


state 126

  101 Value: TAG DOUBLE_COLON . TAG OPEN_BRACKET Expr CLOSE_BRACKET
  102      | TAG DOUBLE_COLON . TAG OPEN_BRACKET OPEN_BRACKET MapsList CLOSE_BRACKET CLOSE_BRACKET
  103      | TAG DOUBLE_COLON . TAG

    TAG  shift, and go to state 179


state 127

   84 Value: PLUS Value .

    $default  reduce using rule 84 (Value)


state 128

   85 Value: MINUS Value .

    $default  reduce using rule 85 (Value)


state 129

   86 Value: TIMES Value .

    $default  reduce using rule 86 (Value)


state 130

  110 ArgList: Expr . COMMA ArgList
  111        | Expr .

    COMMA  shift, and go to state 180

    $default  reduce using rule 111 (ArgList)


state 131

   99 Value: OPEN_S_BRACKET Arguments . CLOSE_S_BRACKET

    CLOSE_S_BRACKET  shift, and go to state 181


state 132

  108 Arguments: ArgList .

    $default  reduce using rule 108 (Arguments)


state 133

   92 Value: INTEGER_EXPR .
   96      | OPEN_S_BRACKET INTEGER_EXPR . OF TAG IN Expr CLOSE_S_BRACKET

    OF  shift, and go to state 182

    $default  reduce using rule 92 (Value)


state 134

   98 Value: OPEN_BRACKET VarDeclarationList . APPLY Expr CLOSE_BRACKET

    APPLY  shift, and go to state 183


state 135

   95 Value: ARRAY WITH . Expr OF OPEN TAG IN Expr CLOSE

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 184
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 136

   94 Value: BOX WITH . Expr OF OPEN TAG IN Expr CLOSE

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 185
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 137

   89 Value: BOX Value .

    $default  reduce using rule 89 (Value)


state 138

   90 Value: UNBOX Value .

    $default  reduce using rule 90 (Value)


state 139

   53 Expr: LET VarDeclaration . EQUALS Expr IN Expr

    EQUALS  shift, and go to state 186


state 140

   57 Expr: FOR VarDeclaration . EQUALS Expr COMMA Expr COMMA Expr IN Expr

    EQUALS  shift, and go to state 187


state 141

   58 Expr: FOREACH VarDeclaration . FROM Expr IN Expr

    FROM  shift, and go to state 188


state 142

   59 Expr: WHILE Expr . IN Expr

    IN  shift, and go to state 189


state 143

   55 Expr: IF Expr . THEN Expr ELSE Expr

    THEN  shift, and go to state 190


state 144

   88 Value: CARDINAL Value .

    $default  reduce using rule 88 (Value)


state 145

   97 Value: NEW ArrowType . OPEN Arguments CLOSE

    OPEN  shift, and go to state 191


state 146

   87 Value: AMPERSAND Value .

    $default  reduce using rule 87 (Value)


state 147

   83 Value: NOT Value .

    $default  reduce using rule 83 (Value)


state 148

   54 Expr: STATIC VarDeclaration . EQUALS Expr IN Expr

    EQUALS  shift, and go to state 192


state 149

   56 Expr: CASE Expr . OF OPEN CaseList CLOSE

    OF  shift, and go to state 193


state 150

   68 ExpOp: ExpOp PLUS . ExpOp

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    ExpOp         go to state 194
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 151

   69 ExpOp: ExpOp MINUS . ExpOp

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    ExpOp         go to state 195
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 152

   70 ExpOp: ExpOp TIMES . ExpOp

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    ExpOp         go to state 196
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 153

   71 ExpOp: ExpOp DIVIDE . ExpOp

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    ExpOp         go to state 197
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 154

   51 Expr: ExpOp COLON . ArrowType

    TAG            shift, and go to state 13
    TIMES          shift, and go to state 14
    OPEN           shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    BYTE           shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    DOUBLE         shift, and go to state 20
    CHARS          shift, and go to state 21
    BOOLEAN        shift, and go to state 22
    BOX            shift, and go to state 23
    DYNAMIC        shift, and go to state 24
    QUESTION_MARK  shift, and go to state 25
    UNION          shift, and go to state 26

    ArrowType    go to state 198
    PointerType  go to state 28
    ArrayType    go to state 29
    SimpleType   go to state 30


state 155

   50 Expr: ExpOp ASSIGN . Expr

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 199
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 156

   61 ExpOp: ExpOp AND . ExpOp

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    ExpOp         go to state 200
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 157

   62 ExpOp: ExpOp OR . ExpOp

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    ExpOp         go to state 201
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 158

   63 ExpOp: ExpOp LTE . ExpOp

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    ExpOp         go to state 202
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 159

   64 ExpOp: ExpOp GTE . ExpOp

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    ExpOp         go to state 203
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 160

   65 ExpOp: ExpOp LT . ExpOp

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    ExpOp         go to state 204
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 161

   66 ExpOp: ExpOp GT . ExpOp

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    ExpOp         go to state 205
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 162

   67 ExpOp: ExpOp EQ . ExpOp

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    ExpOp         go to state 206
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 163

   52 Expr: ExpOp IS . ArrowType

    TAG            shift, and go to state 13
    TIMES          shift, and go to state 14
    OPEN           shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    BYTE           shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    DOUBLE         shift, and go to state 20
    CHARS          shift, and go to state 21
    BOOLEAN        shift, and go to state 22
    BOX            shift, and go to state 23
    DYNAMIC        shift, and go to state 24
    QUESTION_MARK  shift, and go to state 25
    UNION          shift, and go to state 26

    ArrowType    go to state 207
    PointerType  go to state 28
    ArrayType    go to state 29
    SimpleType   go to state 30


state 164

   80 AccessPath: OPEN_S_BRACKET . Expr CLOSE_S_BRACKET

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 208
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 165

   78 AccessPath: ARROW . TAG
   81           | ARROW . OPEN_S_BRACKET Expr CLOSE_S_BRACKET

    TAG             shift, and go to state 209
    OPEN_S_BRACKET  shift, and go to state 210


state 166

   79 AccessPath: DOUBLE_ARROW . TAG
   82           | DOUBLE_ARROW . OPEN_S_BRACKET Expr CLOSE_S_BRACKET

    TAG             shift, and go to state 211
    OPEN_S_BRACKET  shift, and go to state 212


state 167

   77 AccessPath: DOT . TAG

    TAG  shift, and go to state 213


state 168

   73 Access: Value AccessPathList .

    $default  reduce using rule 73 (Access)


state 169

   75 AccessPathList: AccessPath . AccessPathList
   76               | AccessPath .

    OPEN_S_BRACKET  shift, and go to state 164
    ARROW           shift, and go to state 165
    DOUBLE_ARROW    shift, and go to state 166
    DOT             shift, and go to state 167

    $default  reduce using rule 76 (AccessPathList)

    AccessPathList  go to state 214
    AccessPath      go to state 169


state 170

  104 Value: TAG_OR_EMPTY OPEN . Arguments CLOSE

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    CLOSE     reduce using rule 109 (Arguments)
    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 130
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    Arguments     go to state 215
    ArgList       go to state 132
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 171

   15 ArrowType: OPEN ArgTypeList CLOSE ARROW ArrowType .

    $default  reduce using rule 15 (ArrowType)


state 172

   46 UnionDeclarationList: UnionDeclaration PIPE UnionDeclarationList .

    $default  reduce using rule 46 (UnionDeclarationList)


state 173

    9 Definition: DATATYPE ArrowType AS TAG OPEN VarDeclarations . CLOSE Expr WITH OPEN FunctionList CLOSE

    CLOSE  shift, and go to state 216


state 174

   10 Function: FUNCTION TAG OPEN VarDeclarations CLOSE COLON . ArrowType EQUALS Expr

    TAG            shift, and go to state 13
    TIMES          shift, and go to state 14
    OPEN           shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    BYTE           shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    DOUBLE         shift, and go to state 20
    CHARS          shift, and go to state 21
    BOOLEAN        shift, and go to state 22
    BOX            shift, and go to state 23
    DYNAMIC        shift, and go to state 24
    QUESTION_MARK  shift, and go to state 25
    UNION          shift, and go to state 26

    ArrowType    go to state 217
    PointerType  go to state 28
    ArrayType    go to state 29
    SimpleType   go to state 30


state 175

   11 Function: PROTOTYPE TAG OPEN VarDeclarations CLOSE COLON . ArrowType

    TAG            shift, and go to state 13
    TIMES          shift, and go to state 14
    OPEN           shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    BYTE           shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    DOUBLE         shift, and go to state 20
    CHARS          shift, and go to state 21
    BOOLEAN        shift, and go to state 22
    BOX            shift, and go to state 23
    DYNAMIC        shift, and go to state 24
    QUESTION_MARK  shift, and go to state 25
    UNION          shift, and go to state 26

    ArrowType    go to state 218
    PointerType  go to state 28
    ArrayType    go to state 29
    SimpleType   go to state 30


state 176

  112 Mapping: VarDeclaration . EQUALS Expr

    EQUALS  shift, and go to state 219


state 177

  113 MapsList: Mapping . COMMA MapsList
  114         | Mapping .

    COMMA  shift, and go to state 220

    $default  reduce using rule 114 (MapsList)


state 178

  100 Value: TAG OPEN_BRACKET MapsList . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 221


state 179

  101 Value: TAG DOUBLE_COLON TAG . OPEN_BRACKET Expr CLOSE_BRACKET
  102      | TAG DOUBLE_COLON TAG . OPEN_BRACKET OPEN_BRACKET MapsList CLOSE_BRACKET CLOSE_BRACKET
  103      | TAG DOUBLE_COLON TAG .

    OPEN_BRACKET  shift, and go to state 222

    $default  reduce using rule 103 (Value)


state 180

  110 ArgList: Expr COMMA . ArgList

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 130
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    ArgList       go to state 223
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 181

   99 Value: OPEN_S_BRACKET Arguments CLOSE_S_BRACKET .

    $default  reduce using rule 99 (Value)


state 182

   96 Value: OPEN_S_BRACKET INTEGER_EXPR OF . TAG IN Expr CLOSE_S_BRACKET

    TAG  shift, and go to state 224


state 183

   98 Value: OPEN_BRACKET VarDeclarationList APPLY . Expr CLOSE_BRACKET

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 225
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 184

   95 Value: ARRAY WITH Expr . OF OPEN TAG IN Expr CLOSE

    OF  shift, and go to state 226


state 185

   94 Value: BOX WITH Expr . OF OPEN TAG IN Expr CLOSE

    OF  shift, and go to state 227


state 186

   53 Expr: LET VarDeclaration EQUALS . Expr IN Expr

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 228
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 187

   57 Expr: FOR VarDeclaration EQUALS . Expr COMMA Expr COMMA Expr IN Expr

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 229
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 188

   58 Expr: FOREACH VarDeclaration FROM . Expr IN Expr

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 230
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 189

   59 Expr: WHILE Expr IN . Expr

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 231
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 190

   55 Expr: IF Expr THEN . Expr ELSE Expr

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 232
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 191

   97 Value: NEW ArrowType OPEN . Arguments CLOSE

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    CLOSE     reduce using rule 109 (Arguments)
    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 130
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    Arguments     go to state 233
    ArgList       go to state 132
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 192

   54 Expr: STATIC VarDeclaration EQUALS . Expr IN Expr

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 234
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 193

   56 Expr: CASE Expr OF . OPEN CaseList CLOSE

    OPEN  shift, and go to state 235


state 194

   61 ExpOp: ExpOp . AND ExpOp
   62      | ExpOp . OR ExpOp
   63      | ExpOp . LTE ExpOp
   64      | ExpOp . GTE ExpOp
   65      | ExpOp . LT ExpOp
   66      | ExpOp . GT ExpOp
   67      | ExpOp . EQ ExpOp
   68      | ExpOp . PLUS ExpOp
   68      | ExpOp PLUS ExpOp .
   69      | ExpOp . MINUS ExpOp
   70      | ExpOp . TIMES ExpOp
   71      | ExpOp . DIVIDE ExpOp

    TIMES   shift, and go to state 152
    DIVIDE  shift, and go to state 153

    $default  reduce using rule 68 (ExpOp)


state 195

   61 ExpOp: ExpOp . AND ExpOp
   62      | ExpOp . OR ExpOp
   63      | ExpOp . LTE ExpOp
   64      | ExpOp . GTE ExpOp
   65      | ExpOp . LT ExpOp
   66      | ExpOp . GT ExpOp
   67      | ExpOp . EQ ExpOp
   68      | ExpOp . PLUS ExpOp
   69      | ExpOp . MINUS ExpOp
   69      | ExpOp MINUS ExpOp .
   70      | ExpOp . TIMES ExpOp
   71      | ExpOp . DIVIDE ExpOp

    TIMES   shift, and go to state 152
    DIVIDE  shift, and go to state 153

    $default  reduce using rule 69 (ExpOp)


state 196

   61 ExpOp: ExpOp . AND ExpOp
   62      | ExpOp . OR ExpOp
   63      | ExpOp . LTE ExpOp
   64      | ExpOp . GTE ExpOp
   65      | ExpOp . LT ExpOp
   66      | ExpOp . GT ExpOp
   67      | ExpOp . EQ ExpOp
   68      | ExpOp . PLUS ExpOp
   69      | ExpOp . MINUS ExpOp
   70      | ExpOp . TIMES ExpOp
   70      | ExpOp TIMES ExpOp .
   71      | ExpOp . DIVIDE ExpOp

    $default  reduce using rule 70 (ExpOp)


state 197

   61 ExpOp: ExpOp . AND ExpOp
   62      | ExpOp . OR ExpOp
   63      | ExpOp . LTE ExpOp
   64      | ExpOp . GTE ExpOp
   65      | ExpOp . LT ExpOp
   66      | ExpOp . GT ExpOp
   67      | ExpOp . EQ ExpOp
   68      | ExpOp . PLUS ExpOp
   69      | ExpOp . MINUS ExpOp
   70      | ExpOp . TIMES ExpOp
   71      | ExpOp . DIVIDE ExpOp
   71      | ExpOp DIVIDE ExpOp .

    $default  reduce using rule 71 (ExpOp)


state 198

   51 Expr: ExpOp COLON ArrowType .

    $default  reduce using rule 51 (Expr)


state 199

   50 Expr: ExpOp ASSIGN Expr .

    $default  reduce using rule 50 (Expr)


state 200

   61 ExpOp: ExpOp . AND ExpOp
   61      | ExpOp AND ExpOp .
   62      | ExpOp . OR ExpOp
   63      | ExpOp . LTE ExpOp
   64      | ExpOp . GTE ExpOp
   65      | ExpOp . LT ExpOp
   66      | ExpOp . GT ExpOp
   67      | ExpOp . EQ ExpOp
   68      | ExpOp . PLUS ExpOp
   69      | ExpOp . MINUS ExpOp
   70      | ExpOp . TIMES ExpOp
   71      | ExpOp . DIVIDE ExpOp

    PLUS    shift, and go to state 150
    MINUS   shift, and go to state 151
    TIMES   shift, and go to state 152
    DIVIDE  shift, and go to state 153
    LTE     shift, and go to state 158
    GTE     shift, and go to state 159
    LT      shift, and go to state 160
    GT      shift, and go to state 161
    EQ      shift, and go to state 162

    $default  reduce using rule 61 (ExpOp)


state 201

   61 ExpOp: ExpOp . AND ExpOp
   62      | ExpOp . OR ExpOp
   62      | ExpOp OR ExpOp .
   63      | ExpOp . LTE ExpOp
   64      | ExpOp . GTE ExpOp
   65      | ExpOp . LT ExpOp
   66      | ExpOp . GT ExpOp
   67      | ExpOp . EQ ExpOp
   68      | ExpOp . PLUS ExpOp
   69      | ExpOp . MINUS ExpOp
   70      | ExpOp . TIMES ExpOp
   71      | ExpOp . DIVIDE ExpOp

    PLUS    shift, and go to state 150
    MINUS   shift, and go to state 151
    TIMES   shift, and go to state 152
    DIVIDE  shift, and go to state 153
    LTE     shift, and go to state 158
    GTE     shift, and go to state 159
    LT      shift, and go to state 160
    GT      shift, and go to state 161
    EQ      shift, and go to state 162

    $default  reduce using rule 62 (ExpOp)


state 202

   61 ExpOp: ExpOp . AND ExpOp
   62      | ExpOp . OR ExpOp
   63      | ExpOp . LTE ExpOp
   63      | ExpOp LTE ExpOp .
   64      | ExpOp . GTE ExpOp
   65      | ExpOp . LT ExpOp
   66      | ExpOp . GT ExpOp
   67      | ExpOp . EQ ExpOp
   68      | ExpOp . PLUS ExpOp
   69      | ExpOp . MINUS ExpOp
   70      | ExpOp . TIMES ExpOp
   71      | ExpOp . DIVIDE ExpOp

    PLUS    shift, and go to state 150
    MINUS   shift, and go to state 151
    TIMES   shift, and go to state 152
    DIVIDE  shift, and go to state 153

    $default  reduce using rule 63 (ExpOp)


state 203

   61 ExpOp: ExpOp . AND ExpOp
   62      | ExpOp . OR ExpOp
   63      | ExpOp . LTE ExpOp
   64      | ExpOp . GTE ExpOp
   64      | ExpOp GTE ExpOp .
   65      | ExpOp . LT ExpOp
   66      | ExpOp . GT ExpOp
   67      | ExpOp . EQ ExpOp
   68      | ExpOp . PLUS ExpOp
   69      | ExpOp . MINUS ExpOp
   70      | ExpOp . TIMES ExpOp
   71      | ExpOp . DIVIDE ExpOp

    PLUS    shift, and go to state 150
    MINUS   shift, and go to state 151
    TIMES   shift, and go to state 152
    DIVIDE  shift, and go to state 153

    $default  reduce using rule 64 (ExpOp)


state 204

   61 ExpOp: ExpOp . AND ExpOp
   62      | ExpOp . OR ExpOp
   63      | ExpOp . LTE ExpOp
   64      | ExpOp . GTE ExpOp
   65      | ExpOp . LT ExpOp
   65      | ExpOp LT ExpOp .
   66      | ExpOp . GT ExpOp
   67      | ExpOp . EQ ExpOp
   68      | ExpOp . PLUS ExpOp
   69      | ExpOp . MINUS ExpOp
   70      | ExpOp . TIMES ExpOp
   71      | ExpOp . DIVIDE ExpOp

    PLUS    shift, and go to state 150
    MINUS   shift, and go to state 151
    TIMES   shift, and go to state 152
    DIVIDE  shift, and go to state 153

    $default  reduce using rule 65 (ExpOp)


state 205

   61 ExpOp: ExpOp . AND ExpOp
   62      | ExpOp . OR ExpOp
   63      | ExpOp . LTE ExpOp
   64      | ExpOp . GTE ExpOp
   65      | ExpOp . LT ExpOp
   66      | ExpOp . GT ExpOp
   66      | ExpOp GT ExpOp .
   67      | ExpOp . EQ ExpOp
   68      | ExpOp . PLUS ExpOp
   69      | ExpOp . MINUS ExpOp
   70      | ExpOp . TIMES ExpOp
   71      | ExpOp . DIVIDE ExpOp

    PLUS    shift, and go to state 150
    MINUS   shift, and go to state 151
    TIMES   shift, and go to state 152
    DIVIDE  shift, and go to state 153

    $default  reduce using rule 66 (ExpOp)


state 206

   61 ExpOp: ExpOp . AND ExpOp
   62      | ExpOp . OR ExpOp
   63      | ExpOp . LTE ExpOp
   64      | ExpOp . GTE ExpOp
   65      | ExpOp . LT ExpOp
   66      | ExpOp . GT ExpOp
   67      | ExpOp . EQ ExpOp
   67      | ExpOp EQ ExpOp .
   68      | ExpOp . PLUS ExpOp
   69      | ExpOp . MINUS ExpOp
   70      | ExpOp . TIMES ExpOp
   71      | ExpOp . DIVIDE ExpOp

    PLUS    shift, and go to state 150
    MINUS   shift, and go to state 151
    TIMES   shift, and go to state 152
    DIVIDE  shift, and go to state 153

    $default  reduce using rule 67 (ExpOp)


state 207

   52 Expr: ExpOp IS ArrowType .

    $default  reduce using rule 52 (Expr)


state 208

   80 AccessPath: OPEN_S_BRACKET Expr . CLOSE_S_BRACKET

    CLOSE_S_BRACKET  shift, and go to state 236


state 209

   78 AccessPath: ARROW TAG .

    $default  reduce using rule 78 (AccessPath)


state 210

   81 AccessPath: ARROW OPEN_S_BRACKET . Expr CLOSE_S_BRACKET

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 237
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 211

   79 AccessPath: DOUBLE_ARROW TAG .

    $default  reduce using rule 79 (AccessPath)


state 212

   82 AccessPath: DOUBLE_ARROW OPEN_S_BRACKET . Expr CLOSE_S_BRACKET

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 238
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 213

   77 AccessPath: DOT TAG .

    $default  reduce using rule 77 (AccessPath)


state 214

   75 AccessPathList: AccessPath AccessPathList .

    $default  reduce using rule 75 (AccessPathList)


state 215

  104 Value: TAG_OR_EMPTY OPEN Arguments . CLOSE

    CLOSE  shift, and go to state 239


state 216

    9 Definition: DATATYPE ArrowType AS TAG OPEN VarDeclarations CLOSE . Expr WITH OPEN FunctionList CLOSE

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 240
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 217

   10 Function: FUNCTION TAG OPEN VarDeclarations CLOSE COLON ArrowType . EQUALS Expr

    EQUALS  shift, and go to state 241


state 218

   11 Function: PROTOTYPE TAG OPEN VarDeclarations CLOSE COLON ArrowType .

    $default  reduce using rule 11 (Function)


state 219

  112 Mapping: VarDeclaration EQUALS . Expr

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 242
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 220

  113 MapsList: Mapping COMMA . MapsList

    TAG  shift, and go to state 34

    VarDeclaration  go to state 176
    Mapping         go to state 177
    MapsList        go to state 243


state 221

  100 Value: TAG OPEN_BRACKET MapsList CLOSE_BRACKET .

    $default  reduce using rule 100 (Value)


state 222

  101 Value: TAG DOUBLE_COLON TAG OPEN_BRACKET . Expr CLOSE_BRACKET
  102      | TAG DOUBLE_COLON TAG OPEN_BRACKET . OPEN_BRACKET MapsList CLOSE_BRACKET CLOSE_BRACKET

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 244
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 245
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 223

  110 ArgList: Expr COMMA ArgList .

    $default  reduce using rule 110 (ArgList)


state 224

   96 Value: OPEN_S_BRACKET INTEGER_EXPR OF TAG . IN Expr CLOSE_S_BRACKET

    IN  shift, and go to state 246


state 225

   98 Value: OPEN_BRACKET VarDeclarationList APPLY Expr . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 247


state 226

   95 Value: ARRAY WITH Expr OF . OPEN TAG IN Expr CLOSE

    OPEN  shift, and go to state 248


state 227

   94 Value: BOX WITH Expr OF . OPEN TAG IN Expr CLOSE

    OPEN  shift, and go to state 249


state 228

   53 Expr: LET VarDeclaration EQUALS Expr . IN Expr

    IN  shift, and go to state 250


state 229

   57 Expr: FOR VarDeclaration EQUALS Expr . COMMA Expr COMMA Expr IN Expr

    COMMA  shift, and go to state 251


state 230

   58 Expr: FOREACH VarDeclaration FROM Expr . IN Expr

    IN  shift, and go to state 252


state 231

   59 Expr: WHILE Expr IN Expr .

    $default  reduce using rule 59 (Expr)


state 232

   55 Expr: IF Expr THEN Expr . ELSE Expr

    ELSE  shift, and go to state 253


state 233

   97 Value: NEW ArrowType OPEN Arguments . CLOSE

    CLOSE  shift, and go to state 254


state 234

   54 Expr: STATIC VarDeclaration EQUALS Expr . IN Expr

    IN  shift, and go to state 255


state 235

   56 Expr: CASE Expr OF OPEN . CaseList CLOSE

    TAG        shift, and go to state 256
    OTHERWISE  shift, and go to state 257

    Case      go to state 258
    CaseList  go to state 259


state 236

   80 AccessPath: OPEN_S_BRACKET Expr CLOSE_S_BRACKET .

    $default  reduce using rule 80 (AccessPath)


state 237

   81 AccessPath: ARROW OPEN_S_BRACKET Expr . CLOSE_S_BRACKET

    CLOSE_S_BRACKET  shift, and go to state 260


state 238

   82 AccessPath: DOUBLE_ARROW OPEN_S_BRACKET Expr . CLOSE_S_BRACKET

    CLOSE_S_BRACKET  shift, and go to state 261


state 239

  104 Value: TAG_OR_EMPTY OPEN Arguments CLOSE .

    $default  reduce using rule 104 (Value)


state 240

    9 Definition: DATATYPE ArrowType AS TAG OPEN VarDeclarations CLOSE Expr . WITH OPEN FunctionList CLOSE

    WITH  shift, and go to state 262


state 241

   10 Function: FUNCTION TAG OPEN VarDeclarations CLOSE COLON ArrowType EQUALS . Expr

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 263
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 242

  112 Mapping: VarDeclaration EQUALS Expr .

    $default  reduce using rule 112 (Mapping)


state 243

  113 MapsList: Mapping COMMA MapsList .

    $default  reduce using rule 113 (MapsList)


state 244

   98 Value: OPEN_BRACKET . VarDeclarationList APPLY Expr CLOSE_BRACKET
  102      | TAG DOUBLE_COLON TAG OPEN_BRACKET OPEN_BRACKET . MapsList CLOSE_BRACKET CLOSE_BRACKET

    TAG  shift, and go to state 34

    VarDeclarationList  go to state 134
    VarDeclaration      go to state 264
    Mapping             go to state 177
    MapsList            go to state 265


state 245

  101 Value: TAG DOUBLE_COLON TAG OPEN_BRACKET Expr . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 266


state 246

   96 Value: OPEN_S_BRACKET INTEGER_EXPR OF TAG IN . Expr CLOSE_S_BRACKET

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 267
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 247

   98 Value: OPEN_BRACKET VarDeclarationList APPLY Expr CLOSE_BRACKET .

    $default  reduce using rule 98 (Value)


state 248

   95 Value: ARRAY WITH Expr OF OPEN . TAG IN Expr CLOSE

    TAG  shift, and go to state 268


state 249

   94 Value: BOX WITH Expr OF OPEN . TAG IN Expr CLOSE

    TAG  shift, and go to state 269


state 250

   53 Expr: LET VarDeclaration EQUALS Expr IN . Expr

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 270
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 251

   57 Expr: FOR VarDeclaration EQUALS Expr COMMA . Expr COMMA Expr IN Expr

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 271
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 252

   58 Expr: FOREACH VarDeclaration FROM Expr IN . Expr

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 272
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 253

   55 Expr: IF Expr THEN Expr ELSE . Expr

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 273
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 254

   97 Value: NEW ArrowType OPEN Arguments CLOSE .

    $default  reduce using rule 97 (Value)


state 255

   54 Expr: STATIC VarDeclaration EQUALS Expr IN . Expr

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 274
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 256

  115 Case: TAG . VarDeclaration IN Expr
  116     | TAG . IN Expr

    TAG  shift, and go to state 34
    IN   shift, and go to state 275

    VarDeclaration  go to state 276


state 257

  117 Case: OTHERWISE . IN Expr

    IN  shift, and go to state 277


state 258

  118 CaseList: Case . PIPE CaseList
  119         | Case .

    PIPE  shift, and go to state 278

    $default  reduce using rule 119 (CaseList)


state 259

   56 Expr: CASE Expr OF OPEN CaseList . CLOSE

    CLOSE  shift, and go to state 279


state 260

   81 AccessPath: ARROW OPEN_S_BRACKET Expr CLOSE_S_BRACKET .

    $default  reduce using rule 81 (AccessPath)


state 261

   82 AccessPath: DOUBLE_ARROW OPEN_S_BRACKET Expr CLOSE_S_BRACKET .

    $default  reduce using rule 82 (AccessPath)


state 262

    9 Definition: DATATYPE ArrowType AS TAG OPEN VarDeclarations CLOSE Expr WITH . OPEN FunctionList CLOSE

    OPEN  shift, and go to state 280


state 263

   10 Function: FUNCTION TAG OPEN VarDeclarations CLOSE COLON ArrowType EQUALS Expr .

    $default  reduce using rule 10 (Function)


state 264

   42 VarDeclarationList: VarDeclaration . COMMA VarDeclarationList
   43                   | VarDeclaration .
  112 Mapping: VarDeclaration . EQUALS Expr

    EQUALS  shift, and go to state 219
    COMMA   shift, and go to state 68

    $default  reduce using rule 43 (VarDeclarationList)


state 265

  102 Value: TAG DOUBLE_COLON TAG OPEN_BRACKET OPEN_BRACKET MapsList . CLOSE_BRACKET CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 281


state 266

  101 Value: TAG DOUBLE_COLON TAG OPEN_BRACKET Expr CLOSE_BRACKET .

    $default  reduce using rule 101 (Value)


state 267

   96 Value: OPEN_S_BRACKET INTEGER_EXPR OF TAG IN Expr . CLOSE_S_BRACKET

    CLOSE_S_BRACKET  shift, and go to state 282


state 268

   95 Value: ARRAY WITH Expr OF OPEN TAG . IN Expr CLOSE

    IN  shift, and go to state 283


state 269

   94 Value: BOX WITH Expr OF OPEN TAG . IN Expr CLOSE

    IN  shift, and go to state 284


state 270

   53 Expr: LET VarDeclaration EQUALS Expr IN Expr .

    $default  reduce using rule 53 (Expr)


state 271

   57 Expr: FOR VarDeclaration EQUALS Expr COMMA Expr . COMMA Expr IN Expr

    COMMA  shift, and go to state 285


state 272

   58 Expr: FOREACH VarDeclaration FROM Expr IN Expr .

    $default  reduce using rule 58 (Expr)


state 273

   55 Expr: IF Expr THEN Expr ELSE Expr .

    $default  reduce using rule 55 (Expr)


state 274

   54 Expr: STATIC VarDeclaration EQUALS Expr IN Expr .

    $default  reduce using rule 54 (Expr)


state 275

  116 Case: TAG IN . Expr

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 286
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 276

  115 Case: TAG VarDeclaration . IN Expr

    IN  shift, and go to state 287


state 277

  117 Case: OTHERWISE IN . Expr

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 288
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 278

  118 CaseList: Case PIPE . CaseList

    TAG        shift, and go to state 256
    OTHERWISE  shift, and go to state 257

    Case      go to state 258
    CaseList  go to state 289


state 279

   56 Expr: CASE Expr OF OPEN CaseList CLOSE .

    $default  reduce using rule 56 (Expr)


state 280

    9 Definition: DATATYPE ArrowType AS TAG OPEN VarDeclarations CLOSE Expr WITH OPEN . FunctionList CLOSE

    FUNCTION   shift, and go to state 3
    PROTOTYPE  shift, and go to state 4

    Function      go to state 290
    FunctionList  go to state 291


state 281

  102 Value: TAG DOUBLE_COLON TAG OPEN_BRACKET OPEN_BRACKET MapsList CLOSE_BRACKET . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 292


state 282

   96 Value: OPEN_S_BRACKET INTEGER_EXPR OF TAG IN Expr CLOSE_S_BRACKET .

    $default  reduce using rule 96 (Value)


state 283

   95 Value: ARRAY WITH Expr OF OPEN TAG IN . Expr CLOSE

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 293
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 284

   94 Value: BOX WITH Expr OF OPEN TAG IN . Expr CLOSE

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 294
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 285

   57 Expr: FOR VarDeclaration EQUALS Expr COMMA Expr COMMA . Expr IN Expr

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 295
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 286

  116 Case: TAG IN Expr .

    $default  reduce using rule 116 (Case)


state 287

  115 Case: TAG VarDeclaration IN . Expr

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 296
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 288

  117 Case: OTHERWISE IN Expr .

    $default  reduce using rule 117 (Case)


state 289

  118 CaseList: Case PIPE CaseList .

    $default  reduce using rule 118 (CaseList)


state 290

   12 FunctionList: Function . FunctionList
   13             | Function .

    FUNCTION   shift, and go to state 3
    PROTOTYPE  shift, and go to state 4

    $default  reduce using rule 13 (FunctionList)

    Function      go to state 290
    FunctionList  go to state 297


state 291

    9 Definition: DATATYPE ArrowType AS TAG OPEN VarDeclarations CLOSE Expr WITH OPEN FunctionList . CLOSE

    CLOSE  shift, and go to state 298


state 292

  102 Value: TAG DOUBLE_COLON TAG OPEN_BRACKET OPEN_BRACKET MapsList CLOSE_BRACKET CLOSE_BRACKET .

    $default  reduce using rule 102 (Value)


state 293

   95 Value: ARRAY WITH Expr OF OPEN TAG IN Expr . CLOSE

    CLOSE  shift, and go to state 299


state 294

   94 Value: BOX WITH Expr OF OPEN TAG IN Expr . CLOSE

    CLOSE  shift, and go to state 300


state 295

   57 Expr: FOR VarDeclaration EQUALS Expr COMMA Expr COMMA Expr . IN Expr

    IN  shift, and go to state 301


state 296

  115 Case: TAG VarDeclaration IN Expr .

    $default  reduce using rule 115 (Case)


state 297

   12 FunctionList: Function FunctionList .

    $default  reduce using rule 12 (FunctionList)


state 298

    9 Definition: DATATYPE ArrowType AS TAG OPEN VarDeclarations CLOSE Expr WITH OPEN FunctionList CLOSE .

    $default  reduce using rule 9 (Definition)


state 299

   95 Value: ARRAY WITH Expr OF OPEN TAG IN Expr CLOSE .

    $default  reduce using rule 95 (Value)


state 300

   94 Value: BOX WITH Expr OF OPEN TAG IN Expr CLOSE .

    $default  reduce using rule 94 (Value)


state 301

   57 Expr: FOR VarDeclaration EQUALS Expr COMMA Expr COMMA Expr IN . Expr

    DOUBLE_VALUE    shift, and go to state 82
    INTEGER         shift, and go to state 75
    TAG             shift, and go to state 83
    STRING          shift, and go to state 11
    PLUS            shift, and go to state 84
    MINUS           shift, and go to state 85
    TIMES           shift, and go to state 86
    OPEN_S_BRACKET  shift, and go to state 87
    OPEN_BRACKET    shift, and go to state 88
    ARRAY           shift, and go to state 89
    BOX             shift, and go to state 90
    UNBOX           shift, and go to state 91
    LET             shift, and go to state 92
    FOR             shift, and go to state 93
    FOREACH         shift, and go to state 94
    WHILE           shift, and go to state 95
    IF              shift, and go to state 96
    CARDINAL        shift, and go to state 97
    NEW             shift, and go to state 98
    AMPERSAND       shift, and go to state 99
    NOT             shift, and go to state 100
    STATIC          shift, and go to state 101
    CASE            shift, and go to state 102

    $default  reduce using rule 107 (TAG_OR_EMPTY)

    Expr          go to state 302
    ExpOp         go to state 104
    Access        go to state 105
    Value         go to state 106
    TAG_OR_EMPTY  go to state 107
    DOUBLE_EXPR   go to state 108
    INTEGER_EXPR  go to state 109
    STRING_EXPR   go to state 110


state 302

   57 Expr: FOR VarDeclaration EQUALS Expr COMMA Expr COMMA Expr IN Expr .

    $default  reduce using rule 57 (Expr)
